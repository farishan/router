function Router(onchange={}){var{initialRoute,useLogger:useLogger=!1,onchange}=onchange;const NAVIGATOR_ID={button:"router-nav-buttons",input:"router-nav-input"};return this.useLogger=useLogger,this.currentRoute=initialRoute||"/",this.currentLinks=[],this.lastRoute=null,this.routeMap={},this.onchange=onchange||null,this.logWindow=document.createElement("div"),this.currentRouteWindow=document.createElement("div"),this.init=()=>{var logWindowTitle;this.useLogger&&(this.logWindow.setAttribute("style","border:1px solid;padding:5px"),logWindowTitle=document.createTextNode("Router Log Window"),this.logWindow.appendChild(logWindowTitle),this.currentRouteWindow.innerHTML=`Current route: <code>${this.currentRoute}</code>`,this.logWindow.appendChild(this.currentRouteWindow),document.body.appendChild(this.logWindow))},this.setRoute=route=>{var from;route!==this.currentRoute&&(from=JSON.parse(JSON.stringify(this.currentRoute)),this.lastRoute=from,this.currentRoute=route,this.currentRouteWindow.innerHTML=`Current route: <code>${this.currentRoute}</code>`,this.routeMap[route]&&this.routeMap[route].links&&(this.currentLinks=this.routeMap[route].links),this.removeDynamicRoot(),this.refreshNavigation(),this.useLogger&&console.log("route changed.",{from:from,to:route}),null!==this.onchange&&this.onchange(this))},this.getDOM=initialNodes=>{const div=document.createElement("div");if(div.dataset.name="router",div.title="Router DOM",this.useLogger&&(div.style.border="1px solid",div.style.padding="10px"),initialNodes&&0<initialNodes.length)for(let index=0;index<initialNodes.length;index++){var node=initialNodes[index];div.appendChild(node)}return div},this.createRoute=(path={})=>{var route=new Route(path),{path}=path;return this.routeMap[path]=route},this.createRoutes=(options=[])=>{for(let index=0;index<options.length;index++){var element=options[index];this.createRoute(element)}},this.createNavigation=type=>{if("button"===type){const div=document.createElement("div");if(div.id=NAVIGATOR_ID.button,this.routeMap[this.currentRoute]){var links=this.routeMap[this.currentRoute].links;for(let index=0;index<links.length;index++){var link=links[index];const button=document.createElement("button"),route=this.routeMap[link];route?(button.innerHTML=route.name,button.onclick=()=>{this.setRoute(route.path)},div.appendChild(button)):console.error(`${link} is not found in routeMap.`)}}return div}if("input"!==type)return document.createElement("div");{const div=document.createElement("div");div.id=NAVIGATOR_ID.input;const input=document.createElement("input"),button=document.createElement("button");return button.innerHTML="submit",button.onclick=()=>{var newRoute=input.value;this.setRoute(newRoute)},div.appendChild(input),div.appendChild(button),div}},this.createDynamicRoot=path=>{if(document.getElementById(`dynamicRoot/${path}`))return document.getElementById(`dynamicRoot/${path}`);{const root=document.createElement("div");return root.id=`dynamicRoot/${path}`,root}},this.removeDynamicRoot=()=>{const dom=document.getElementById(`dynamicRoot${this.lastRoute}`);dom&&dom.remove()},this.refreshNavigation=()=>{document.getElementById(NAVIGATOR_ID.button)&&document.getElementById(NAVIGATOR_ID.button).replaceWith(this.createNavigation("button")),document.getElementById(NAVIGATOR_ID.input)&&document.getElementById(NAVIGATOR_ID.input).replaceWith(this.createNavigation("input"))},this.loadContent=(path,callback)=>{const root=router.createDynamicRoot(path);root.appendChild(callback()),document.body.appendChild(root)},this;function Route(scripts={}){var{path,name,links,payload,scripts:scripts=[]}=scripts;return this.id=`Route${"_"+Math.random().toString(36).substr(2,9)}`,this.path=path,this.name=name,this.links=links,this.scripts=scripts,this.payload=payload,this}}