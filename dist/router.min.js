function Router(useLogger={}){var{initialRoute,useLogger:useLogger=!1}=useLogger;return this.useLogger=useLogger,this.currentRoute=initialRoute||"/",this.lastRoute=null,this.routeMap={},this.onchange=null,this.setRoute=route=>{var from;route!==this.currentRoute&&(from=JSON.parse(JSON.stringify(this.currentRoute)),this.lastRoute=from,this.currentRoute=route,this.useLogger&&console.log("route changed.",{from:from,to:route}),null!==this.onchange&&this.onchange(this))},this.getRoute=()=>this.currentRoute,this.getDOM=initialNodes=>{const div=document.createElement("div");if(div.dataset.name="router",this.useLogger){div.style.border="1px solid",div.style.padding="10px",div.innerHTML+="router",div.innerHTML+=String(this.currentRoute);const input=document.createElement("input"),button=document.createElement("button");button.innerHTML="submit",button.onclick=()=>{console.log(input.value);var newRoute=input.value;this.setRoute(newRoute),div.appendChild(document.createTextNode(String(this.currentRoute)))},div.appendChild(input),div.appendChild(button)}if(initialNodes&&0<initialNodes.length)for(let index=0;index<initialNodes.length;index++){var node=initialNodes[index];div.appendChild(node)}return div},this.createRoute=(path={})=>{var route=new Route(path),{path}=path;return this.routeMap[path]=route},this.createNavigation=type=>{if("button"!==type)return document.createElement("div");{const routes=[];for(let index=0;index<Object.keys(this.routeMap).length;index++){var path=Object.keys(this.routeMap)[index];routes.push(this.routeMap[path])}return new NavButtons({routes:routes,router:this})}},this.createDynamicRoot=path=>{if(document.getElementById(`dynamicRoot/${path}`))return document.getElementById(`dynamicRoot/${path}`);{const root=document.createElement("div");return root.id=`dynamicRoot/${path}`,root}},this.loadContent=(path,callback)=>{const root=router.createDynamicRoot(path);root.appendChild(callback()),document.body.appendChild(root)},this;function Route(scripts={}){var{path,name,links,payload,scripts:scripts=[]}=scripts;return this.id=`Route${"_"+Math.random().toString(36).substr(2,9)}`,this.path=path,this.name=name,this.links=links,this.scripts=scripts,this.payload=payload,this}function NavButtons(options={}){console.log(options);const{routes:routes=[],router}=options;this.Node=document.createElement("div");for(let index=0;index<routes.length;index++){const route=routes[index],button=document.createElement("button");button.innerHTML=route.name,button.onclick=()=>{router.setRoute(route.path)},this.Node.appendChild(button)}return this}}